CORE
main.c
--enforce-all-contracts _ --z3
^EXIT=0$
^SIGNAL=0$
^\[main.1\] line .* Check loop invariant before entry: SUCCESS
^\[main.2\] line .* Check that loop invariant is preserved: SUCCESS
^\[main.assertion.1\] line .* assertion .*: SUCCESS
^VERIFICATION SUCCESSFUL$
--
^warning: ignoring
--
This test case checks the handling of a universal quantifier, with a symbolic
upper bound, within a loop invariant.

TODO: This test should:
- be tagged `smt-backend`:
  because the SAT backend does not support (simply ignores) `forall` in negative (e.g. assume) contexts.
- be tagged `broken-cprover-smt-backend`:
  because the CPROVER SMT2 solver cannot handle (errors out on) `forall` in negative (e.g. assume) contexts.
- not use the `_ --z3` parameters:
  once SMT-related tags are supported by the `Makefile`.
